/**
 * generated by Xtext 2.32.0
 */
package org.xtext.example.mydsl.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;
import resources.Ammunition;
import resources.Frigate;
import resources.Resources;
import resources.Vehicle;

@SuppressWarnings("all")
public class MyDslFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private MyDslGrammarAccess _myDslGrammarAccess;

  protected void _format(final Resources resources, @Extension final IFormattableDocument document) {
    EList<Vehicle> _vehicles = resources.getVehicles();
    for (final Vehicle vehicle : _vehicles) {
      document.<Vehicle>format(vehicle);
    }
  }

  protected void _format(final Frigate frigate, @Extension final IFormattableDocument document) {
    EList<Ammunition> _ammunitions = frigate.getAmmunitions();
    for (final Ammunition ammunition : _ammunitions) {
      document.<Ammunition>format(ammunition);
    }
  }

  public void format(final Object frigate, final IFormattableDocument document) {
    if (frigate instanceof XtextResource) {
      _format((XtextResource)frigate, document);
      return;
    } else if (frigate instanceof Frigate) {
      _format((Frigate)frigate, document);
      return;
    } else if (frigate instanceof Resources) {
      _format((Resources)frigate, document);
      return;
    } else if (frigate instanceof EObject) {
      _format((EObject)frigate, document);
      return;
    } else if (frigate == null) {
      _format((Void)null, document);
      return;
    } else if (frigate != null) {
      _format(frigate, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(frigate, document).toString());
    }
  }
}
